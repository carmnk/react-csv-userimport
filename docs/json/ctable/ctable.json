[{"tags":{"remark":"react wrapper component for Material UI's <Table/> component facilitating/specifying usage and extending functionality.","docu":"component to create docs for CTable forwardRef with react-docgen-typescript (not recognized as function),","dummy":"CTable"},"description":"CTableDocu","displayName":"CTableDocu","methods":[],"props":{"classes":{"defaultValue":{"value":"{}"},"description":"object containing custom classes (made with MUIs makeStyles() hook, only that way_???_)\n@remark supported classes:\n- rows: superseeds roweven and rowodd, [doColorRows](#doColorRows) must be true\n- roweven: even rows (first row is 0), [doColorRows](#doColorRows) must be true\n- rowodd: odd rows (first row is 0), [doColorRows](#doColorRows) must be true\\\ndefault class's background is \"#bdbdbd\" if MUI theme is light otherwise (dark) it's \"#757575\"\n- head: header row, [doColorHeadRow](#doColorHeadRow) must be true and [useStickyHeader](#useStickyHeader) false\\\ndefault class's background is \"#757575\" if MUI theme is light otherwise (dark) it's \"#bdbdbd\"\n- seleceted: selected rows, \\\ndefault class's background is determined by MUI theme: theme.palette.primary.main\n- stickyHeader: class for sticky header if [useStickyHeader](#useStickyHeader) is true, (doColorHeadRow is not active) \\\ndefault class's background is theme.palette.background.default\n- \"&#64;media(pointer: fine)\": css-media-query for pointers(not touch devices) intended to apply custom mouse hover effect for previously provided classes (rows, roweven...), see code example below. \\\nby default: mouse hover effect for roweven, rowodd, selected is applied. Their hover background color is \"#757575\" if MUI theme is light otherwise (dark) it's \"#bdbdbd\"\n\nexample\\\nJS:\n```ts\nconst myclasses= makeStyles(theme => ({\nhead: {background: blue,},\n\"&#64;media(pointer: fine)\": {\nhead: {\"&:hover\": {background: \"orange\",},},\n}\n}));\n```\nJSX:\n```jsx\n<CTable classes={myclasses}\\>\n```","name":"classes","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"{ rows?: string; roweven?: string; rowodd?: string; head?: string; selected?: string; \"@media(pointer: fine)\"?: string; stickyHeader?: string; }"},"tags":{"remark":"supported classes:\n- rows: superseeds roweven and rowodd, [doColorRows](#doColorRows) must be true\n- roweven: even rows (first row is 0), [doColorRows](#doColorRows) must be true\n- rowodd: odd rows (first row is 0), [doColorRows](#doColorRows) must be true\\\ndefault class's background is \"#bdbdbd\" if MUI theme is light otherwise (dark) it's \"#757575\"\n- head: header row, [doColorHeadRow](#doColorHeadRow) must be true and [useStickyHeader](#useStickyHeader) false\\\ndefault class's background is \"#757575\" if MUI theme is light otherwise (dark) it's \"#bdbdbd\"\n- seleceted: selected rows, \\\ndefault class's background is determined by MUI theme: theme.palette.primary.main\n- stickyHeader: class for sticky header if [useStickyHeader](#useStickyHeader) is true, (doColorHeadRow is not active) \\\ndefault class's background is theme.palette.background.default\n- \"&#64;media(pointer: fine)\": css-media-query for pointers(not touch devices) intended to apply custom mouse hover effect for previously provided classes (rows, roweven...), see code example below. \\\nby default: mouse hover effect for roweven, rowodd, selected is applied. Their hover background color is \"#757575\" if MUI theme is light otherwise (dark) it's \"#bdbdbd\"\n\nexample\\\nJS:\n```ts\nconst myclasses= makeStyles(theme => ({\nhead: {background: blue,},\n\"&#64;media(pointer: fine)\": {\nhead: {\"&:hover\": {background: \"orange\",},},\n}\n}));\n```\nJSX:\n```jsx\n<CTable classes={myclasses}\\>\n```"}},"data":{"defaultValue":{"value":"[]"},"description":"data to be displayed typed as Array of Objects, each object representing a single row.\n@remark Data is processed by sequence! of object propertys (not their property key!). Empty cells must be provided by property containing empty string.\\\nBut! Data's property keys must be same for 1 column to provide sorting functionality.\\\nexample:\n```ts\ndata=[{col1: 1, col2: 2, col3: 3}, {col1: 4, col2: 5, col3: 6},]\n```","name":"data","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"{ [key: string]: string; }[]"},"tags":{"remark":"Data is processed by sequence! of object propertys (not their property key!). Empty cells must be provided by property containing empty string.\\\nBut! Data's property keys must be same for 1 column to provide sorting functionality.\\\nexample:\n```ts\ndata=[{col1: 1, col2: 2, col3: 3}, {col1: 4, col2: 5, col3: 6},]\n```"}},"doColorRows":{"defaultValue":{"value":"true"},"description":"determines whether or not to color the table rows","name":"doColorRows","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"boolean"},"tags":{}},"preview":{"defaultValue":{"value":"0"},"description":"limits the amount of data (rows) displayed in the table (data is not modified/deleted, header row is not counted)","name":"preview","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"number"},"tags":{}},"useHeader":{"defaultValue":{"value":"true"},"description":"determines whether or not to use the header row if property [header](#header) is provided","name":"useHeader","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"boolean"},"tags":{}},"usePagination":{"defaultValue":{"value":"true"},"description":"determines whether or not to use pagination","name":"usePagination","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"boolean"},"tags":{}},"useStickyHeader":{"defaultValue":{"value":"true"},"description":"determines whether or not header is sticky, if true doColorRows is not effective, header can only be customized with stickyHeader class or by MUI theme's default background (see [classes](#classes))","name":"useStickyHeader","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"boolean"},"tags":{}},"useToolbar":{"defaultValue":{"value":"true"},"description":"determines whether or not to use the toolbar, currently just containing title","name":"useToolbar","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"boolean"},"tags":{}},"size":{"defaultValue":{"value":"small"},"description":"table size can be modified by setting [MUI's table size property](#https://material-ui.com/api/table/).\n@remark See https://material-ui.com/api/table/ for MUI Table size property.\n@nospec MUI component propertys","name":"size","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"Size"},"tags":{"remark":"See https://material-ui.com/api/table/ for MUI Table size property.","nospec":"MUI component propertys"}},"TableBodyProps":{"defaultValue":{"value":"{}"},"description":"TableBodyProps allows you to customize table body by providing an object containing [MUI TableBody Props](https://material-ui.com/api/table-body/)\n@remark table body is composed of MUI's TableBody component. Propertys of TableBodyProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-body/ for MUI TableHead propertys.\n@nospec MUI component propertys","name":"TableBodyProps","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"CommonProps<TableBodyTypeMap<{}, \"tbody\">> & Pick<Pick<DetailedHTMLProps<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>, \"title\" | \"slot\" | \"style\" | ... 251 more ... | \"onTransitionEndCapture\"> & { ...; }, \"title\" | ... 252 more ... | \"onTransitionEndCapture\">"},"tags":{"remark":"table body is composed of MUI's TableBody component. Propertys of TableBodyProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-body/ for MUI TableHead propertys.","nospec":"MUI component propertys"}},"TableContainerProps":{"defaultValue":{"value":"{}"},"description":"TableContainerProps allows you to customize table container by providing an object containing [MUI TableContainer Props](https://material-ui.com/api/table-container/)\n@remark table container is composed of MUI's TableContainer component. Propertys of TableContainerProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-container/ for MUI TableContainer propertys.\n@nospec MUI component propertys","name":"TableContainerProps","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"CommonProps<TableContainerTypeMap<{}, \"div\">> & Pick<Pick<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \"title\" | \"slot\" | \"style\" | \"className\" | ... 250 more ... | \"onTransitionEndCapture\"> & { ...; }, \"title\" | ... 252 more ... | \"onTransitionEndCapture\">"},"tags":{"remark":"table container is composed of MUI's TableContainer component. Propertys of TableContainerProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-container/ for MUI TableContainer propertys.","nospec":"MUI component propertys"}},"TablePaginationProps":{"defaultValue":null,"description":"TablePaginationProps allows you to customize table pagination by providing an object containing [MUI TablePagination Props](https://material-ui.com/api/table-pagination/)\n@remark table pagination is composed of MUI's TablePagination component. Propertys of TablePaginationProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-pagination/ for MUI TablePagination propertys.\n@nospec MUI component propertys","name":"TablePaginationProps","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"(Pick<TableCellProps, \"title\" | \"ref\" | \"abbr\" | \"slot\" | \"style\" | \"className\" | \"innerRef\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | ... 257 more ... | \"variant\"> & { ...; } & CommonProps<...> & Pick<...>) | (Pick<...> & ... 2 more ... & Pick<...>)"},"tags":{"remark":"table pagination is composed of MUI's TablePagination component. Propertys of TablePaginationProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-pagination/ for MUI TablePagination propertys.","nospec":"MUI component propertys"}},"TableProps":{"defaultValue":{"value":"{}"},"description":"Table Props\n@desc TableProps allows you to customize table by providing an object containing [MUI Table Props](https://material-ui.com/api/table/)\n@remark table is composed of MUI's Table component. Propertys of TablePaginationProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-pagination/ for MUI TablePagination propertys.\nexample\n```jsx\n<CTable TableProps={{size: \"small\", padding: \"none\"}}/>\n```\n@nospec MUI component propertys","name":"TableProps","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"{ padding?: Padding; size?: Size; stickyHeader?: boolean; } & CommonProps<TableTypeMap<{}, \"table\">> & Pick<Pick<DetailedHTMLProps<TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>, \"title\" | ... 257 more ... | \"width\"> & { ...; }, \"title\" | ... 256 more ... | \"width\">"},"tags":{"desc":"TableProps allows you to customize table by providing an object containing [MUI Table Props](https://material-ui.com/api/table/)","remark":"table is composed of MUI's Table component. Propertys of TablePaginationProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-pagination/ for MUI TablePagination propertys.\nexample\n```jsx\n<CTable TableProps={{size: \"small\", padding: \"none\"}}/>\n```","nospec":"MUI component propertys"}},"conditionalCellClass":{"defaultValue":null,"description":"Method conditionalCellClass can be provided to highlight/modify certain specific cells by providing specific class.\n@remark Method is called when rendering table. The following parameters are passed: (icol, irow, colkey, rowcontent).\\\nyour method can perform some conditional checks based on parameters and can return a MUI class (if your condition is fulfilled).\\\nexample:\n```jsx\n<CTable conditionalCellClass={(icol, irow, colkey, rowcontent) => {\nif (irow === 1 && icol === 0) return specialcellclass\n}} />\n```","name":"conditionalCellClass","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"(icol: number, irow: number, colkey: string, colcontent: string) => string"},"tags":{"remark":"Method is called when rendering table. The following parameters are passed: (icol, irow, colkey, rowcontent).\\\nyour method can perform some conditional checks based on parameters and can return a MUI class (if your condition is fulfilled).\\\nexample:\n```jsx\n<CTable conditionalCellClass={(icol, irow, colkey, rowcontent) => {\nif (irow === 1 && icol === 0) return specialcellclass\n}} />\n```"}},"conditionalRowClass":{"defaultValue":null,"description":"similar to conditionalCellClass but used to highlight/modify whole rows.\n@remark Method is called when rendering table. The following parameters are passed: (irow).\\\nyour method can perform some conditional checks based on parameters and can return a MUI class (if your condition is fulfilled).\\\nexample:\n```jsx\n<CTable conditionalRowClass={irow => {\nif (irow === 0) return specialrowclass\n}} />\n```","name":"conditionalRowClass","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTablePropTypes"}],"required":false,"type":{"name":"(irow: number) => string"},"tags":{"remark":"Method is called when rendering table. The following parameters are passed: (irow).\\\nyour method can perform some conditional checks based on parameters and can return a MUI class (if your condition is fulfilled).\\\nexample:\n```jsx\n<CTable conditionalRowClass={irow => {\nif (irow === 0) return specialrowclass\n}} />\n```"}},"classHeadRow":{"defaultValue":null,"description":"@internal","name":"classHeadRow","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"string"},"tags":{"internal":""}},"classStickyHeader":{"defaultValue":null,"description":"@internal","name":"classStickyHeader","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"string"},"tags":{"internal":""}},"order":{"defaultValue":null,"description":"@internal","name":"order","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"\"asc\" | \"desc\" | \"none\""},"tags":{"internal":""}},"orderBy":{"defaultValue":null,"description":"@internal","name":"orderBy","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"string"},"tags":{"internal":""}},"header":{"defaultValue":{"value":"[]"},"description":"header row data typed as Array of Objects, each object representing one column's features.\n@remark header columns are filled by sequence! of objects within enclosing array.\n- id: column id is required if header is provided. table data witch corresponding property keys is sorted.\n- numeric: Columns with numeric=true are aligned on right side. Otherwise column is aligned on left side.\n- disablePadding: allows you to disable padding for each column\n- label: column header label to be applied.","name":"header","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"{ id: string; numeric?: boolean; disablePadding?: boolean; label?: string; align?: Alignment; }[]"},"tags":{"remark":"header columns are filled by sequence! of objects within enclosing array.\n- id: column id is required if header is provided. table data witch corresponding property keys is sorted.\n- numeric: Columns with numeric=true are aligned on right side. Otherwise column is aligned on left side.\n- disablePadding: allows you to disable padding for each column\n- label: column header label to be applied."}},"numSelected":{"defaultValue":null,"description":"@internal","name":"numSelected","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"number"},"tags":{"internal":""}},"rowCount":{"defaultValue":null,"description":"@internal","name":"rowCount","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"number"},"tags":{"internal":""}},"onRequestSort":{"defaultValue":null,"description":"@internal","name":"onRequestSort","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"(e: any, prop: string) => void"},"tags":{"internal":""}},"onSelectAllClick":{"defaultValue":null,"description":"@internal","name":"onSelectAllClick","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"(event: any) => void"},"tags":{"internal":""}},"useSelectableRows":{"defaultValue":{"value":"true"},"description":"determines whether rows can be selected. If true an additional checkbox column is added on left side of table.\n@remark Checkboxes can be customized by using [TableCheckboxProps](#TableCheckboxProps).","name":"useSelectableRows","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"boolean"},"tags":{"remark":"Checkboxes can be customized by using [TableCheckboxProps](#TableCheckboxProps)."}},"useSelectableAllRows":{"defaultValue":{"value":"true"},"description":"determines whether all rows can be selected by clicking/touching the header's checkbox.\n@remark [useSelectableRows](#useSelectableRows) must be true.\\\nCheckboxes can be customized by using [TableCheckboxProps](#TableCheckboxProps).","name":"useSelectableAllRows","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"boolean"},"tags":{"remark":"[useSelectableRows](#useSelectableRows) must be true.\\\nCheckboxes can be customized by using [TableCheckboxProps](#TableCheckboxProps)."}},"doColorHeadRow":{"defaultValue":{"value":"true"},"description":"determines whether header class (see [classes](#classes)) shall be applied to table header,\n@remark [useStickyHeader](#useStickyHeader) must be false.","name":"doColorHeadRow","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"boolean"},"tags":{"remark":"[useStickyHeader](#useStickyHeader) must be false."}},"TableHeadProps":{"defaultValue":{"value":"{}"},"description":"TableHeadProps allows you to customize table head by providing an object containing [MUI TableHead Props](https://material-ui.com/api/table-head/)\n@remark table head is composed of MUI's TableHead component. Propertys of TableHeadProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-head/ for MUI TableHead propertys.\n@nospec MUI component propertys","name":"TableHeadProps","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"CommonProps<TableHeadTypeMap<{}, \"thead\">> & Pick<Pick<DetailedHTMLProps<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>, \"title\" | \"slot\" | \"style\" | ... 251 more ... | \"onTransitionEndCapture\"> & { ...; }, \"title\" | ... 252 more ... | \"onTransitionEndCapture\">"},"tags":{"remark":"table head is composed of MUI's TableHead component. Propertys of TableHeadProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/table-head/ for MUI TableHead propertys.","nospec":"MUI component propertys"}},"TableCheckboxProps":{"defaultValue":{"value":"{}"},"description":"TableCheckboxProps allows you to customize all table checkboxes by providing an object containing [MUI's Checkbox Props](https://material-ui.com/api/checkbox/)\n@remark checkboxes to select rows are composed of MUI Checkbox components. Propertys of TableCheckboxProps are passed to these components by rest operator.\\\nSee https://material-ui.com/api/checkbox/ for MUI Checkbox propertys.\n@nospec MUI component propertys","name":"TableCheckboxProps","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableHeadPropTypes"}],"required":false,"type":{"name":"CheckboxProps"},"tags":{"remark":"checkboxes to select rows are composed of MUI Checkbox components. Propertys of TableCheckboxProps are passed to these components by rest operator.\\\nSee https://material-ui.com/api/checkbox/ for MUI Checkbox propertys.","nospec":"MUI component propertys"}},"title":{"defaultValue":{"value":"Title 1235813"},"description":"table title to display if [useToolbar](#useToolbar) is true","name":"title","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableToolbarPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableToolbarPropTypes"}],"required":false,"type":{"name":"string"},"tags":{}},"ToolbarProps":{"defaultValue":{"value":"{}"},"description":"ToolbarProps allows you to customize table toolbar by providing an object containing [MUI Toolbar Props](https://material-ui.com/api/toolbar/)\n@remark table toolbar is composed of MUI's Toolbar component. Propertys of ToolbarProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/toolbar/ for MUI Toolbar propertys.\n@nospec MUI component propertys","name":"ToolbarProps","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableToolbarPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableToolbarPropTypes"}],"required":false,"type":{"name":"{ disableGutters?: boolean; variant?: \"regular\" | \"dense\"; } & CommonProps<ToolbarTypeMap<{}, \"div\">> & Pick<Pick<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \"title\" | ... 253 more ... | \"onTransitionEndCapture\"> & { ...; }, \"title\" | ... 252 more ... | \"onTransitionEndCapture\">"},"tags":{"remark":"table toolbar is composed of MUI's Toolbar component. Propertys of ToolbarProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/toolbar/ for MUI Toolbar propertys.","nospec":"MUI component propertys"}},"ToolbarTypoProps":{"defaultValue":{"value":"{}"},"description":"ToolbarTypoProps allows you to customize table toolbar's title by providing an object containing [MUI Typography Props](https://material-ui.com/api/typography/)\n@remark table toolbar title is composed of MUI's Typography component. Propertys of ToolbarTypoProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/typography/ for MUI Toolbar propertys.\n@nospec MUI component propertys","name":"ToolbarTypoProps","parent":{"fileName":"src/ctable/ctable.tsx","name":"CTableToolbarPropTypes"},"declarations":[{"fileName":"src/ctable/ctable.tsx","name":"CTableToolbarPropTypes"}],"required":false,"type":{"name":"{ align?: Alignment; children?: ReactNode; color?: \"inherit\" | \"primary\" | \"secondary\" | \"initial\" | \"textPrimary\" | \"textSecondary\" | \"error\"; display?: \"inline\" | \"initial\" | \"block\"; ... 4 more ...; variantMapping?: Partial<...>; } & CommonProps<...> & Pick<...>"},"tags":{"remark":"table toolbar title is composed of MUI's Typography component. Propertys of ToolbarTypoProps are passed to this component by rest operator.\\\nSee https://material-ui.com/api/typography/ for MUI Toolbar propertys.","nospec":"MUI component propertys"}}}},{"tags":{},"description":"CTablePropTypes\n\ninterface for CTable react component props","displayName":"CTableDocu.defaultProps","methods":[],"props":{}},{"tags":{},"description":"CTable\n\nreact wrapper component for Material UI's <Table/> component facilitating/specifying usage and extending functionality.","displayName":"ctable","methods":[],"props":{}}]